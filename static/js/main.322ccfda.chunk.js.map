{"version":3,"sources":["App.js","box.js","reportWebVitals.js","index.js"],"names":["App","RepeatBox","map","Map","i","set","useState","colorStates","setColorStates","turn","setTurn","list","TileButton","onClick","id","newMap","get","changecolor","style","backgroundColor","className","Box","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OAgCeA,ICnBTC,EAAU,WAMZ,IALA,IAAIC,EAAK,IAAIC,IAKLC,EAAG,EAAEA,EAAE,GAAGA,IAEdF,EAAIG,IAAID,EAAE,OAAO,CANb,EAEA,IA6BR,IAvBD,MAAkCE,mBAASJ,GAA3C,mBAAMK,EAAN,KAAkBC,EAAlB,KACA,EAAoBF,mBAAS,OAA7B,mBAAMG,EAAN,KAAWC,EAAX,KAqBOC,EAAO,GAhCI,WAiCTP,GACJ,IAAIQ,EAAa,qBAAKC,QAAW,kBAlBrB,SAACC,GACf,IAAMC,EAAS,IAAIZ,IAAII,GACN,QAAhBQ,EAAOC,IAAIF,IAAqB,OAANL,GACzBM,EAAOV,IAAIS,EAAI,OACfN,EAAeO,GACfL,EAAQ,SAEY,QAAhBK,EAAOC,IAAIF,IAAqB,QAAPL,IAC7BM,EAAOV,IAAIS,EAAI,QACfN,EAAeO,GACfL,EAAQ,QAQ+BO,CAAYb,IAAIc,MAAO,CAACC,gBAAiBZ,EAAYS,IAAIZ,IAAKgB,UAAU,SAASN,GAAIV,IAC7HO,EAAKP,GAAGQ,GAFHR,EAAE,EAAEA,EAAE,GAAIA,IAAK,EAAfA,GAMR,OAAO,sBAAKgB,UAAU,OAAf,cAAwBT,MAYpBU,MATf,WAGA,OAAO,qBAAKD,UAAW,OAAhB,SACH,cAAC,EAAD,OC/CWE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UAEE,cAAC,EAAD,MAOFC,SAASC,eAAe,SAQ1Bb,M","file":"static/js/main.322ccfda.chunk.js","sourcesContent":["import React,{useState} from 'react'; \nimport Hello from'./Sayhello.js';\nimport Tweet from './Tweet.js';\n//import './App.css'\n\n\nfunction App(){\nconst [isRed,setRed]=useState(false);\nconst [count,setCount]=useState(0);\n\nconst Increment=()=>  {\n  setCount(count+1);\n}\n\nreturn(\n  \n  \n    <div className =\"App\">\n   \n   <button onClick={Increment}>Increment</button>\n   <h1>{count}</h1>\n  \n </div> \n  \n    \n \n  \n  \n  )\n\n}\n\nexport default App;","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport userEvent from \"@testing-library/user-event\";\r\n\r\n\r\n\r\nconst log=()=>  {\r\n    console.log(\"hello\");\r\n  }\r\n\r\n  \r\n\r\n\r\nconst RepeatBox=()=> {\r\n    let map= new Map(); \r\n    let x = 1;\r\n    let countX=0;\r\n    let y = 3;\r\n    let countY=0;\r\n    for(let i =1;i<10;i++){\r\n      \r\n        map.set(i,\"gray\",[x,y]); \r\n    }\r\n   const[colorStates,setColorStates]=useState(map);\r\n   const[turn,setTurn]=useState('red');\r\n\r\n   //let color = 'gray'\r\n  // let setcolor = () => color = 'red'\r\n\r\n  const changecolor=(id)=>  {\r\n      const newMap = new Map(colorStates)\r\n    if(newMap.get(id)=='gray' && turn=='red' ){\r\n        newMap.set(id, 'red')\r\n        setColorStates(newMap);\r\n        setTurn('blue');\r\n    }\r\n    else if(newMap.get(id)=='gray'&& turn =='blue' ){\r\n        newMap.set(id, 'blue')\r\n        setColorStates(newMap);\r\n        setTurn('red');\r\n    }\r\n    \r\n  }\r\n\r\n\r\n    const list = [];\r\n    for(let i=1;i<10; i++){\r\n        let TileButton = <div onClick = {() => changecolor(i)} style={{backgroundColor: colorStates.get(i)}} className=\"square\" id={i}></div>\r\n       list[i]=TileButton;\r\n       \r\n    }\r\n   \r\n    return <div className=\"tile\"> {list}</div> ;\r\n}\r\n\r\nfunction Box(){\r\n\r\n    \r\nreturn <div className =\"tile\">\r\n    <RepeatBox/>\r\n</div>;\r\n\r\n}\r\n\r\nexport default Box;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Box from './box';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    \n    <Box />\n    \n    \n\n    \n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n//<App />\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}