{"version":3,"sources":["Bannor.js","CheckOutcomes/RightHorizontal_top.ts","CheckOutcomes/RightHorizontal_mid.ts","CheckOutcomes/RightHorizontal_bot.ts","CheckOutcomes/Vertical_left.ts","CheckOutcomes/Vertical_mid.ts","CheckOutcomes/Vertical_right.ts","CheckOutcomes/Diagonal_left.ts","CheckOutcomes/Diagonal_right.ts","CheckOutcomes/CheckVictor.js","PlayAgain.js","box.js","reportWebVitals.js","index.js"],"names":["Bannor","props","RedScore","BlueScore","className","RightHorizontal_top","grid","id","turn","first","get","second","third","RightHorizontal_mid","fourth","fiveth","sixth","console","log","RightHorizontal_bot","seventh","eighth","nineth","Vertical_left","Vertical_mid","fifth","eight","Vertical_right","Diagonal_left","Diagonal_right","CheckVictor","map","VictorColor","x","PlayAgain","WinColor","ShowPlayAgainButton","RepeatBox","notifyScoreUpdate","useState","SetRedScore","SetBlueScore","Map","y","i","set","colorStates","setColorStates","setTurn","victor","setVictor","list","TileButton","onClick","newMap","CheckWin","changecolor","style","backgroundColor","Game","ClearMap","SaveScoreBlue","SaveScoreRed","Box","red","setRed","blue","setBlue","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","hydrate","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f55e2556.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport './App.css';\r\n\r\nconst Bannor=(props)=>{\r\n    const RedScore = props.RedScore;\r\n    const BlueScore = props.BlueScore;\r\n\r\n    return <div className =\"Head\">   \r\n    <h1> \r\n        Tic-Tac-Toe\r\n        <h2 >\r\n       <dt className =\"PlayGameRed\">  Team Red: {RedScore}</dt>\r\n       <dt className=\"PlayGameBlue\" >  Team Blue: {BlueScore}</dt>\r\n       \r\n    </h2>\r\n        \r\n    </h1>\r\n   \r\n    \r\n     </div>\r\n}\r\n\r\nexport default Bannor; ","\r\nconst RightHorizontal_top= (grid:Map<number,Array<string|number >>,id:number,turn: string)=>{\r\n    let first = grid.get(1)?.[0];\r\n    let second = grid.get(2)?.[0];\r\n    let third = grid.get(3)?.[0];  \r\n    if (id==1 ||id ==2|| id==3){\r\n        if(first==turn && second==turn && third==turn){\r\n            //console.log(\"first: \"+first +\" second: \"+ second +\",third: \"+third);\r\n            return turn;\r\n        }\r\n        else{\r\n            return \"gray\";\r\n        }\r\n    }\r\n    else{\r\n        return \"gray\";\r\n    }\r\n\r\n}\r\nexport default RightHorizontal_top;","const RightHorizontal_mid= (grid:Map<number,Array<string|number >>,id:number,turn: string)=>{\r\n    let fourth = grid.get(4)?.[0];\r\n    let fiveth = grid.get(5)?.[0];\r\n    let sixth = grid.get(6)?.[0];  \r\n    console.log(turn);\r\n    if (id==4 ||id ==5|| id==6){\r\n        if(fourth==turn && fiveth==turn && sixth==turn){\r\n            console.log(\"4: \"+fourth +\" 5: \"+ fiveth +\",6: \"+sixth);\r\n            return turn;\r\n        }\r\n        else{\r\n            return \"gray\";\r\n        }\r\n    }\r\n    else{\r\n        return \"gray\";\r\n    }\r\n}\r\nexport default RightHorizontal_mid;","\r\n\r\nconst RightHorizontal_bot=(grid:Map<number,Array<string|number >>,id:number,turn: string)=>{\r\n    let seventh = grid.get(7)?.[0];\r\n    let eighth = grid.get(8)?.[0];\r\n    let nineth = grid.get(9)?.[0];  \r\n    console.log(turn);\r\n        if(seventh==turn && eighth==turn && nineth==turn){\r\n            //console.log(\"4: \"+fourth +\" 5: \"+ fiveth +\",6: \"+sixth);\r\n            return turn;\r\n        }\r\n        else{\r\n            return \"gray\";\r\n        }\r\n    \r\n    \r\n}\r\n\r\nexport default RightHorizontal_bot;","const Vertical_left=(grid:Map<number,Array<string|number >>,id:number,turn: string)=>{\r\n    let first = grid.get(1)?.[0];\r\n    let fourth = grid.get(4)?.[0];\r\n    let seventh = grid.get(7)?.[0];     \r\n        if(first==turn && fourth==turn && seventh==turn){\r\n            //console.log(\"first: \"+first +\" second: \"+ second +\",third: \"+third);\r\n            return turn;\r\n        }\r\n        else{\r\n            return \"gray\";\r\n        } \r\n}\r\n\r\nexport default Vertical_left;","const Vertical_mid=(grid:Map<number,Array<string|number>>,id: number, turn :string)=>{\r\n    let second = grid.get(2)?.[0];\r\n    let fifth = grid.get(5)?.[0];\r\n    let eight = grid.get(8)?.[0];     \r\n        if(second==turn && fifth==turn && eight==turn){\r\n            //console.log(\"first: \"+first +\" second: \"+ second +\",third: \"+third);\r\n            return turn;\r\n        }\r\n        else{\r\n            return \"gray\";\r\n        } \r\n}\r\nexport default Vertical_mid; ","\r\nconst Vertical_right=(grid:Map<number,Array<string|number>>,id: number, turn :string)=>{\r\n    let third = grid.get(3)?.[0];\r\n    let sixth = grid.get(6)?.[0];\r\n    let nineth = grid.get(9)?.[0];     \r\n        if(third==turn && sixth==turn && nineth==turn){\r\n            //console.log(\"first: \"+first +\" second: \"+ second +\",third: \"+third);\r\n            return turn;\r\n        }\r\n        else{\r\n            return \"gray\";\r\n        } \r\n}\r\n\r\nexport default Vertical_right;","const Diagonal_left=(grid:Map<number,Array<string|number >>,id:number,turn: string)=>{\r\n    let first = grid.get(1)?.[0];\r\n    let fifth = grid.get(5)?.[0];\r\n    let nineth = grid.get(9)?.[0];     \r\n        if(first==turn && fifth==turn && nineth==turn){\r\n            //console.log(\"first: \"+first +\" second: \"+ second +\",third: \"+third);\r\n            return turn;\r\n        }\r\n        else{\r\n            return \"gray\";\r\n        } \r\n}\r\n\r\nexport default Diagonal_left;","const Diagonal_right=(grid:Map<number,Array<string|number >>,id:number,turn: string)=>{\r\n    let third = grid.get(3)?.[0];\r\n    let fifth = grid.get(5)?.[0];\r\n    let seventh = grid.get(7)?.[0];     \r\n        if(third==turn && fifth==turn && seventh==turn){\r\n            //console.log(\"first: \"+first +\" second: \"+ second +\",third: \"+third);\r\n            return turn;\r\n        }\r\n        else{\r\n            return \"gray\";\r\n        } \r\n\r\n}\r\n\r\nexport default Diagonal_right;","//import RightHorizontal_top from \"./RightHorizontal_top.js\";\r\n//import RightHorizontal_mid from \"./RightHorizontal_mid.js\";\r\n//import RightHorizontal_bot from \"./RightHorizontal_bot.js\";\r\n//import Diagonal_left from \"./Diagonal_left.js\";\r\n//import Diagonal_right from \"./Diagonal_right.js\";\r\n//import Vertical_left from \"./Vertical_left.js\";\r\n//import Vertical_mid from \"./Vertical_mid.js\";\r\n//import Vertical_right from \"./Vertical_right.js\";\r\nimport RightHorizontal_top from \"./RightHorizontal_top.ts\";\r\nimport RightHorizontal_mid from \"./RightHorizontal_mid.ts\";\r\nimport RightHorizontal_bot from \"./RightHorizontal_bot.ts\";\r\nimport Vertical_left from \"./Vertical_left.ts\";\r\nimport Vertical_mid from \"./Vertical_mid.ts\";\r\nimport Vertical_right from \"./Vertical_right.ts\";\r\nimport Diagonal_left from \"./Diagonal_left.ts\";\r\nimport Diagonal_right from \"./Diagonal_right.ts\";\r\n\r\n\r\nconst CheckVictor =(map,id,turn)=>{\r\n    let VictorColor =\"gray\";\r\n    \r\n    if (id==1 ||id ==2|| id==3){\r\n        let x= RightHorizontal_top(map,id,turn);\r\n        if (x == turn){\r\n            VictorColor = x;\r\n        }\r\n    }\r\n    else if(id ==4||id == 5||id ==6){\r\n        let x =RightHorizontal_mid(map,id,turn);\r\n        if (x== turn){\r\n            VictorColor = x;\r\n        }\r\n    }\r\n    else if (id ==7||id == 8||id ==9){\r\n        let x =RightHorizontal_bot(map,id,turn);\r\n        if (x== turn){\r\n            VictorColor = x;\r\n        }\r\n    }\r\n\r\n    if(id==1||id == 4 ||id==7){\r\n        let x =Vertical_left(map,id,turn);\r\n        if (x==turn){\r\n            VictorColor =x;\r\n        }\r\n    }\r\n    else if(id==2||id==5||id==8){\r\n        let x = Vertical_mid(map,id,turn);\r\n        if(x==turn){\r\n            VictorColor = x;\r\n        }\r\n    }\r\n    else if(id==3||id==6||id==9){\r\n        let x = Vertical_right(map,id,turn);\r\n        if(x==turn){\r\n            VictorColor = x;\r\n        }\r\n    }\r\n\r\n    if(id==1||id == 5 ||id==9){\r\n        let x = Diagonal_left(map,id,turn);\r\n        if (x==turn){\r\n            VictorColor = x;\r\n        }\r\n    }\r\n    else if (id==3||id == 5 ||id==7){\r\n        let x = Diagonal_right(map,id,turn);\r\n        if (x==turn){\r\n            VictorColor = x;\r\n        }\r\n    }\r\n    return VictorColor;\r\n}\r\n\r\nexport default CheckVictor;","import React from \"react\";\r\nimport './App.css';\r\n\r\nfunction PlayAgain(){\r\n    const ShowPlayAgain =()=>{console.log(\"PlayAgain\");\r\n    };\r\n\r\n    return(\r\n        <div><h2 > PlayAgain </h2></div>\r\n    );\r\n}\r\n\r\nexport default PlayAgain;","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport Bannor from \"./Bannor.js\";\r\nimport CheckVictor from \"./CheckOutcomes/CheckVictor.js\";\r\nimport PlayAgain from \"./PlayAgain.js\";\r\n\r\n\r\n\r\n/*const log = () => {\r\n    console.log(\"hello\");\r\n}*/\r\n\r\n\r\n\r\nconst WinColor=(turn)=>{\r\n    if (turn===\"Red\"){\r\n\r\n        return \"PlayGameRed\";\r\n    }\r\n    if(turn===\"Blue\"){\r\n        return\"PlayGameBlue\";\r\n    }\r\n}\r\n\r\nconst ShowPlayAgainButton=(turn)=>{\r\n   \r\n\r\nif(turn!=\"gray\"){\r\n    return \"PlayAgain\"\r\n}\r\nelse{\r\n    return \"PlayAgainNo\";\r\n}\r\n\r\n\r\n}\r\n\r\nconst ClearMap=(map)=>{\r\n    let x = 1;\r\n    let y = 3;\r\n    \r\n    \r\n    for (let i = 1; i < 10; i++) {\r\n        if (x <= 3) {\r\n            map.set(i, [\"gray\", [x, y]]);\r\n            x++;\r\n        }\r\n        else if (x >3) {\r\n            x = 1;\r\n            map.set(i, [\"gray\", [1, y]])\r\n            x++;\r\n        }\r\n        if(i==3||i==6||i==9){\r\n            y--;\r\n        }\r\n    } \r\n    console.log(map);\r\n    return map;\r\n\r\n}\r\n\r\nconst SaveScoreRed=(RedScore,BlueScore,turn)=>{\r\nif(turn ==\"Red\"){\r\n    return RedScore+1;\r\n}\r\nelse{\r\n    return RedScore;\r\n}\r\n}\r\nconst SaveScoreBlue=(RedScore,BlueScore,turn)=>{\r\n    if(turn ==\"Blue\"){\r\n        return BlueScore+1;\r\n    }\r\n    else{\r\n        return BlueScore;\r\n    }\r\n    }\r\n    \r\n\r\n\r\nconst RepeatBox = (props) => {\r\n    const notifyScoreUpdate = props.notifyScoreUpdate;\r\n    const [RedScore,SetRedScore]=useState(0);\r\n    const [BlueScore,SetBlueScore]=useState(0);\r\n\r\n    let map = new Map();\r\n    let x = 1;\r\n    let y = 3;\r\n    for (let i = 1; i < 10; i++) {\r\n        if (x <= 3) {\r\n            map.set(i, [\"gray\", [x, y]]);\r\n            x++;\r\n        }\r\n        else if (x >3) {\r\n            x = 1;\r\n            map.set(i, [\"gray\", [1, y]])\r\n            x++;\r\n        }\r\n        if(i==3||i==6||i==9){\r\n            y--;\r\n        }\r\n    }\r\n    const [colorStates, setColorStates] = useState(map);\r\n    const [turn, setTurn] = useState('Red');\r\n    const [NumberofTurns,SetNumOfTurns]=useState(0);\r\n    const [victor,setVictor] = useState('gray');\r\n    \r\n    //let color = 'gray'\r\n    // let setcolor = () => color = 'red'\r\n    const changecolor = (id) => {\r\n        const newMap = new Map(colorStates);     \r\n        if (newMap.get(id)[0] == 'gray' && turn == 'Red'&& victor =='gray') {\r\n            newMap.set(id, ['Red', [x, y]]);\r\n            setColorStates(newMap);\r\n            let CheckWin= CheckVictor(newMap,id,turn);\r\n            setVictor(CheckWin);\r\n            setTurn('Blue');   \r\n        }\r\n        else if (newMap.get(id)[0] == 'gray' && turn == 'Blue' && victor =='gray') {\r\n            newMap.set(id, ['Blue',[x,y]]);\r\n            setColorStates(newMap);\r\n            let CheckWin= CheckVictor(newMap,id,turn);\r\n            setVictor(CheckWin);\r\n            setTurn('Red');  \r\n        }\r\n      \r\n    }\r\n\r\n\r\n    const list = [];\r\n    for (let i = 1; i < 10; i++) {\r\n        let TileButton = <div onClick={() => {changecolor(i);  }}  style={{ backgroundColor: colorStates.get(i)[0] }} className=\"square\" id={i}></div>\r\n        list[i] = TileButton;\r\n    }\r\n\r\n    let Game = [];\r\n\r\n    Game[0] = <div className=\"tile\"> {list} {victor !== 'gray'&& <div className ={WinColor(victor)} >{victor} Wins</div> } <div className = {ShowPlayAgainButton(victor)} onClick ={()=> {\r\n        setColorStates(ClearMap(colorStates)); \r\n        SetBlueScore(SaveScoreBlue(RedScore,BlueScore,victor));\r\n        SetRedScore(SaveScoreRed(RedScore,BlueScore,victor));\r\n        setTurn(\"Red\");\r\n        setVictor(\"gray\");\r\n        props.notifyScoreUpdate(victor)\r\n    } \r\n    } ><PlayAgain /> \r\n    </div> \r\n    </div>\r\n\r\n    return Game;\r\n}\r\n\r\nfunction Box() {\r\n    const [red, setRed] = useState(0)\r\n    const [blue, setBlue] = useState(0)\r\n\r\n    function handleScoreChange(victor) {\r\n        if (victor === \"Red\") {\r\n            setRed(red+1)\r\n        } else if (victor === \"Blue\") {\r\n            setBlue(blue+1)\r\n        }\r\n    }\r\n\r\n//<RepeatBox/>\r\n\r\n    return <div  >\r\n        <Bannor RedScore={red} BlueScore={blue}/>\r\n        <RepeatBox notifyScoreUpdate={handleScoreChange}/>\r\n    </div>;\r\n}\r\n\r\nexport default Box;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import App from './App';\nimport './App.css';\nimport Box from './box';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.hydrate(\n  <React.StrictMode>\n    \n    <Box />\n    \n    \n\n    \n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n//<App />\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}